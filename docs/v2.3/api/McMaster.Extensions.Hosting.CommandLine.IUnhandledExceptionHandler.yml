### YamlMime:ManagedReference
items:
- uid: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler
  commentId: T:McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler
  id: IUnhandledExceptionHandler
  parent: McMaster.Extensions.Hosting.CommandLine
  children:
  - McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException(System.Exception)
  langs:
  - csharp
  - vb
  name: IUnhandledExceptionHandler
  nameWithType: IUnhandledExceptionHandler
  fullName: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler
  type: Interface
  source:
    remote:
      path: src/Hosting.CommandLine/IUnhandledExceptionHandler.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: IUnhandledExceptionHandler
    path: ../src/Hosting.CommandLine/IUnhandledExceptionHandler.cs
    startLine: 10
  assemblies:
  - McMaster.Extensions.Hosting.CommandLine
  namespace: McMaster.Extensions.Hosting.CommandLine
  summary: "\nUsed by <xref href=\"McMaster.Extensions.Hosting.CommandLine.Internal.CommandLineLifetime\" data-throw-if-not-resolved=\"false\"></xref> to handle exceptions that are emitted from the\n<xref href=\"McMaster.Extensions.CommandLineUtils.CommandLineApplication%601\" data-throw-if-not-resolved=\"false\"></xref> e.g. during parsing or execution\n"
  example: []
  syntax:
    content: public interface IUnhandledExceptionHandler
    content.vb: Public Interface IUnhandledExceptionHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException(System.Exception)
  commentId: M:McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException(System.Exception)
  id: HandleException(System.Exception)
  parent: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler
  langs:
  - csharp
  - vb
  name: HandleException(Exception)
  nameWithType: IUnhandledExceptionHandler.HandleException(Exception)
  fullName: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Hosting.CommandLine/IUnhandledExceptionHandler.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: HandleException
    path: ../src/Hosting.CommandLine/IUnhandledExceptionHandler.cs
    startLine: 16
  assemblies:
  - McMaster.Extensions.Hosting.CommandLine
  namespace: McMaster.Extensions.Hosting.CommandLine
  summary: "\nHandle otherwise uncaught exception. You are free to log, rethrow, â€¦ the exception \n"
  example: []
  syntax:
    content: void HandleException(Exception e)
    parameters:
    - id: e
      type: System.Exception
      description: An otherwise uncaught exception
    content.vb: Sub HandleException(e As Exception)
  overload: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException*
references:
- uid: McMaster.Extensions.Hosting.CommandLine.Internal.CommandLineLifetime
  commentId: T:McMaster.Extensions.Hosting.CommandLine.Internal.CommandLineLifetime
  isExternal: true
- uid: McMaster.Extensions.CommandLineUtils.CommandLineApplication`1
  commentId: T:McMaster.Extensions.CommandLineUtils.CommandLineApplication`1
  name: CommandLineApplication<TModel>
  nameWithType: CommandLineApplication<TModel>
  fullName: McMaster.Extensions.CommandLineUtils.CommandLineApplication<TModel>
  nameWithType.vb: CommandLineApplication(Of TModel)
  fullName.vb: McMaster.Extensions.CommandLineUtils.CommandLineApplication(Of TModel)
  name.vb: CommandLineApplication(Of TModel)
  spec.csharp:
  - uid: McMaster.Extensions.CommandLineUtils.CommandLineApplication`1
    name: CommandLineApplication
    nameWithType: CommandLineApplication
    fullName: McMaster.Extensions.CommandLineUtils.CommandLineApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: McMaster.Extensions.CommandLineUtils.CommandLineApplication`1
    name: CommandLineApplication
    nameWithType: CommandLineApplication
    fullName: McMaster.Extensions.CommandLineUtils.CommandLineApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: McMaster.Extensions.Hosting.CommandLine
  commentId: N:McMaster.Extensions.Hosting.CommandLine
  name: McMaster.Extensions.Hosting.CommandLine
  nameWithType: McMaster.Extensions.Hosting.CommandLine
  fullName: McMaster.Extensions.Hosting.CommandLine
- uid: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException*
  commentId: Overload:McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException
  name: HandleException
  nameWithType: IUnhandledExceptionHandler.HandleException
  fullName: McMaster.Extensions.Hosting.CommandLine.IUnhandledExceptionHandler.HandleException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
