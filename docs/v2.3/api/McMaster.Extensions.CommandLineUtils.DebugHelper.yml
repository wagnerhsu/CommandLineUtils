### YamlMime:ManagedReference
items:
- uid: McMaster.Extensions.CommandLineUtils.DebugHelper
  commentId: T:McMaster.Extensions.CommandLineUtils.DebugHelper
  id: DebugHelper
  parent: McMaster.Extensions.CommandLineUtils
  children:
  - McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(System.String[]@)
  - McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(System.String[]@,System.Int32)
  langs:
  - csharp
  - vb
  name: DebugHelper
  nameWithType: DebugHelper
  fullName: McMaster.Extensions.CommandLineUtils.DebugHelper
  type: Class
  source:
    remote:
      path: src/CommandLineUtils/Utilities/DebugHelper.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: DebugHelper
    path: ../src/CommandLineUtils/Utilities/DebugHelper.cs
    startLine: 14
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nHelps handle debug command-line arguments.\n"
  example: []
  syntax:
    content: public static class DebugHelper
    content.vb: Public Module DebugHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(System.String[]@)
  commentId: M:McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(System.String[]@)
  id: HandleDebugSwitch(System.String[]@)
  parent: McMaster.Extensions.CommandLineUtils.DebugHelper
  langs:
  - csharp
  - vb
  name: HandleDebugSwitch(ref String[])
  nameWithType: DebugHelper.HandleDebugSwitch(ref String[])
  fullName: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(ref System.String[])
  type: Method
  source:
    remote:
      path: src/CommandLineUtils/Utilities/DebugHelper.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: HandleDebugSwitch
    path: ../src/CommandLineUtils/Utilities/DebugHelper.cs
    startLine: 23
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nPauses the application until the debugger is attached when &apos;--debug&apos; is passed in as the first argument.\n<p>\nThe pause times out at 30 seconds and continues execution.\n</p>\n"
  example: []
  syntax:
    content: public static void HandleDebugSwitch(ref string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: The command line arguments
    content.vb: Public Shared Sub HandleDebugSwitch(ByRef args As String())
  overload: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch*
  nameWithType.vb: DebugHelper.HandleDebugSwitch(ByRef String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(ByRef System.String())
  name.vb: HandleDebugSwitch(ByRef String())
- uid: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(System.String[]@,System.Int32)
  commentId: M:McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(System.String[]@,System.Int32)
  id: HandleDebugSwitch(System.String[]@,System.Int32)
  parent: McMaster.Extensions.CommandLineUtils.DebugHelper
  langs:
  - csharp
  - vb
  name: HandleDebugSwitch(ref String[], Int32)
  nameWithType: DebugHelper.HandleDebugSwitch(ref String[], Int32)
  fullName: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(ref System.String[], System.Int32)
  type: Method
  source:
    remote:
      path: src/CommandLineUtils/Utilities/DebugHelper.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: HandleDebugSwitch
    path: ../src/CommandLineUtils/Utilities/DebugHelper.cs
    startLine: 32
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nPauses the application until the debugger is attached when &apos;--debug&apos; is passed in as the first argument,\nwith a maximum wait time in seconds.\n"
  example: []
  syntax:
    content: public static void HandleDebugSwitch(ref string[] args, int maxWaitSeconds)
    parameters:
    - id: args
      type: System.String[]
      description: The command line arguments
    - id: maxWaitSeconds
      type: System.Int32
      description: Maximum number of seconds to wait. Set to 0 or less for infinite waiting.
    content.vb: Public Shared Sub HandleDebugSwitch(ByRef args As String(), maxWaitSeconds As Integer)
  overload: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch*
  nameWithType.vb: DebugHelper.HandleDebugSwitch(ByRef String(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch(ByRef System.String(), System.Int32)
  name.vb: HandleDebugSwitch(ByRef String(), Int32)
references:
- uid: McMaster.Extensions.CommandLineUtils
  commentId: N:McMaster.Extensions.CommandLineUtils
  name: McMaster.Extensions.CommandLineUtils
  nameWithType: McMaster.Extensions.CommandLineUtils
  fullName: McMaster.Extensions.CommandLineUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch
  name: HandleDebugSwitch
  nameWithType: DebugHelper.HandleDebugSwitch
  fullName: McMaster.Extensions.CommandLineUtils.DebugHelper.HandleDebugSwitch
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
