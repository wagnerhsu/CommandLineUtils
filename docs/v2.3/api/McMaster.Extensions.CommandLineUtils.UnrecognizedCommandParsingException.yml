### YamlMime:ManagedReference
items:
- uid: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  commentId: T:McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  id: UnrecognizedCommandParsingException
  parent: McMaster.Extensions.CommandLineUtils
  children:
  - McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.#ctor(McMaster.Extensions.CommandLineUtils.CommandLineApplication,System.Collections.Generic.IEnumerable{System.String},System.String)
  - McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches
  langs:
  - csharp
  - vb
  name: UnrecognizedCommandParsingException
  nameWithType: UnrecognizedCommandParsingException
  fullName: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  type: Class
  source:
    remote:
      path: src/CommandLineUtils/Errors/UnrecognizedCommandParsingException.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: UnrecognizedCommandParsingException
    path: ../src/CommandLineUtils/Errors/UnrecognizedCommandParsingException.cs
    startLine: 12
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nThe exception that is thrown when an invalid argument is given and when we can make suggestions\nabout similar, valid commands or options.\n"
  example: []
  syntax:
    content: 'public class UnrecognizedCommandParsingException : CommandParsingException, ISerializable'
    content.vb: >-
      Public Class UnrecognizedCommandParsingException
          Inherits CommandParsingException
          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - McMaster.Extensions.CommandLineUtils.CommandParsingException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - McMaster.Extensions.CommandLineUtils.CommandParsingException.Command
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.#ctor(McMaster.Extensions.CommandLineUtils.CommandLineApplication,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.#ctor(McMaster.Extensions.CommandLineUtils.CommandLineApplication,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: '#ctor(McMaster.Extensions.CommandLineUtils.CommandLineApplication,System.Collections.Generic.IEnumerable{System.String},System.String)'
  parent: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  langs:
  - csharp
  - vb
  name: UnrecognizedCommandParsingException(CommandLineApplication, IEnumerable<String>, String)
  nameWithType: UnrecognizedCommandParsingException.UnrecognizedCommandParsingException(CommandLineApplication, IEnumerable<String>, String)
  fullName: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.UnrecognizedCommandParsingException(McMaster.Extensions.CommandLineUtils.CommandLineApplication, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Constructor
  source:
    remote:
      path: src/CommandLineUtils/Errors/UnrecognizedCommandParsingException.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: .ctor
    path: ../src/CommandLineUtils/Errors/UnrecognizedCommandParsingException.cs
    startLine: 20
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nInitializes an instance of <xref href=\"McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public UnrecognizedCommandParsingException(CommandLineApplication command, IEnumerable<string> nearestMatches, string message)
    parameters:
    - id: command
      type: McMaster.Extensions.CommandLineUtils.CommandLineApplication
      description: ''
    - id: nearestMatches
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 'The options or commands that '
    - id: message
      type: System.String
      description: ''
    content.vb: Public Sub New(command As CommandLineApplication, nearestMatches As IEnumerable(Of String), message As String)
  overload: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.#ctor*
  nameWithType.vb: UnrecognizedCommandParsingException.UnrecognizedCommandParsingException(CommandLineApplication, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.UnrecognizedCommandParsingException(McMaster.Extensions.CommandLineUtils.CommandLineApplication, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: UnrecognizedCommandParsingException(CommandLineApplication, IEnumerable(Of String), String)
- uid: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches
  commentId: P:McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches
  id: NearestMatches
  parent: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  langs:
  - csharp
  - vb
  name: NearestMatches
  nameWithType: UnrecognizedCommandParsingException.NearestMatches
  fullName: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches
  type: Property
  source:
    remote:
      path: src/CommandLineUtils/Errors/UnrecognizedCommandParsingException.cs
      branch: master
      repo: https://github.com/natemcmaster/CommandLineutils
    id: NearestMatches
    path: ../src/CommandLineUtils/Errors/UnrecognizedCommandParsingException.cs
    startLine: 36
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nA collection of strings representing suggestions about similar and valid commands or options for the invalid\nargument that caused this <xref href=\"McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis property always be empty <xref href=\"McMaster.Extensions.CommandLineUtils.CommandLineApplication.MakeSuggestionsInErrorMessage\" data-throw-if-not-resolved=\"false\"></xref> is false.\n"
  example: []
  syntax:
    content: public IEnumerable<string> NearestMatches { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: This property get/set the suggestions for an invalid argument.
    content.vb: Public ReadOnly Property NearestMatches As IEnumerable(Of String)
  overload: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: McMaster.Extensions.CommandLineUtils
  commentId: N:McMaster.Extensions.CommandLineUtils
  name: McMaster.Extensions.CommandLineUtils
  nameWithType: McMaster.Extensions.CommandLineUtils
  fullName: McMaster.Extensions.CommandLineUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: McMaster.Extensions.CommandLineUtils.CommandParsingException
  commentId: T:McMaster.Extensions.CommandLineUtils.CommandParsingException
  parent: McMaster.Extensions.CommandLineUtils
  name: CommandParsingException
  nameWithType: CommandParsingException
  fullName: McMaster.Extensions.CommandLineUtils.CommandParsingException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: McMaster.Extensions.CommandLineUtils.CommandParsingException.Command
  commentId: P:McMaster.Extensions.CommandLineUtils.CommandParsingException.Command
  parent: McMaster.Extensions.CommandLineUtils.CommandParsingException
  name: Command
  nameWithType: CommandParsingException.Command
  fullName: McMaster.Extensions.CommandLineUtils.CommandParsingException.Command
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  commentId: T:McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
  name: UnrecognizedCommandParsingException
  nameWithType: UnrecognizedCommandParsingException
  fullName: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException
- uid: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.#ctor*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.#ctor
  name: UnrecognizedCommandParsingException
  nameWithType: UnrecognizedCommandParsingException.UnrecognizedCommandParsingException
  fullName: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.UnrecognizedCommandParsingException
- uid: McMaster.Extensions.CommandLineUtils.CommandLineApplication
  commentId: T:McMaster.Extensions.CommandLineUtils.CommandLineApplication
  parent: McMaster.Extensions.CommandLineUtils
  name: CommandLineApplication
  nameWithType: CommandLineApplication
  fullName: McMaster.Extensions.CommandLineUtils.CommandLineApplication
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: McMaster.Extensions.CommandLineUtils.CommandLineApplication.MakeSuggestionsInErrorMessage
  commentId: P:McMaster.Extensions.CommandLineUtils.CommandLineApplication.MakeSuggestionsInErrorMessage
  parent: McMaster.Extensions.CommandLineUtils.CommandLineApplication
  name: MakeSuggestionsInErrorMessage
  nameWithType: CommandLineApplication.MakeSuggestionsInErrorMessage
  fullName: McMaster.Extensions.CommandLineUtils.CommandLineApplication.MakeSuggestionsInErrorMessage
- uid: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches
  name: NearestMatches
  nameWithType: UnrecognizedCommandParsingException.NearestMatches
  fullName: McMaster.Extensions.CommandLineUtils.UnrecognizedCommandParsingException.NearestMatches
