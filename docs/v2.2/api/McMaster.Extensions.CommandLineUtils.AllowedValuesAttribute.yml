### YamlMime:ManagedReference
items:
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  commentId: T:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  id: AllowedValuesAttribute
  parent: McMaster.Extensions.CommandLineUtils
  children:
  - McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor(System.String[])
  - McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor(System.StringComparison,System.String[])
  - McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer
  - McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  - McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  langs:
  - csharp
  - vb
  name: AllowedValuesAttribute
  nameWithType: AllowedValuesAttribute
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  type: Class
  source:
    remote:
      path: src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
      branch: b4ae98e77f9f5a5fd2e7994180c7e722b82fe717
      repo: https://github.com/natemcmaster/CommandLineUtils.git
    id: AllowedValuesAttribute
    path: ../src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
    startLine: 16
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\n<p>\nSpecifies a set of allowed values and a comparer used to determine if a value is in that set.\n</p>\n<p>\nBy default, value comparison is case-sensitive. To ensure case matches exactly, set <xref href=\"McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase\" data-throw-if-not-resolved=\"false\"></xref> to <code>false</code>.\n</p>\n"
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Property)]

      public sealed class AllowedValuesAttribute : ValidationAttribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Property)>

      Public NotInheritable Class AllowedValuesAttribute
          Inherits ValidationAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 128
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor(System.String[])
  commentId: M:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  langs:
  - csharp
  - vb
  name: AllowedValuesAttribute(String[])
  nameWithType: AllowedValuesAttribute.AllowedValuesAttribute(String[])
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.AllowedValuesAttribute(System.String[])
  type: Constructor
  source:
    remote:
      path: src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
      branch: b4ae98e77f9f5a5fd2e7994180c7e722b82fe717
      repo: https://github.com/natemcmaster/CommandLineUtils.git
    id: .ctor
    path: ../src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
    startLine: 25
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nInitializes an instance of <xref href=\"McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AllowedValuesAttribute(params string[] allowedValues)
    parameters:
    - id: allowedValues
      type: System.String[]
      description: ''
    content.vb: Public Sub New(ParamArray allowedValues As String())
  overload: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor*
  nameWithType.vb: AllowedValuesAttribute.AllowedValuesAttribute(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.AllowedValuesAttribute(System.String())
  name.vb: AllowedValuesAttribute(String())
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor(System.StringComparison,System.String[])
  commentId: M:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor(System.StringComparison,System.String[])
  id: '#ctor(System.StringComparison,System.String[])'
  parent: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  langs:
  - csharp
  - vb
  name: AllowedValuesAttribute(StringComparison, String[])
  nameWithType: AllowedValuesAttribute.AllowedValuesAttribute(StringComparison, String[])
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.AllowedValuesAttribute(System.StringComparison, System.String[])
  type: Constructor
  source:
    remote:
      path: src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
      branch: b4ae98e77f9f5a5fd2e7994180c7e722b82fe717
      repo: https://github.com/natemcmaster/CommandLineUtils.git
    id: .ctor
    path: ../src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
    startLine: 35
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nInitializes an instance of <xref href=\"McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AllowedValuesAttribute(StringComparison comparer, params string[] allowedValues)
    parameters:
    - id: comparer
      type: System.StringComparison
      description: ''
    - id: allowedValues
      type: System.String[]
      description: ''
    content.vb: Public Sub New(comparer As StringComparison, ParamArray allowedValues As String())
  overload: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor*
  nameWithType.vb: AllowedValuesAttribute.AllowedValuesAttribute(StringComparison, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.AllowedValuesAttribute(System.StringComparison, System.String())
  name.vb: AllowedValuesAttribute(StringComparison, String())
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer
  commentId: P:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer
  id: Comparer
  parent: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  langs:
  - csharp
  - vb
  name: Comparer
  nameWithType: AllowedValuesAttribute.Comparer
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer
  type: Property
  source:
    remote:
      path: src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
      branch: b4ae98e77f9f5a5fd2e7994180c7e722b82fe717
      repo: https://github.com/natemcmaster/CommandLineUtils.git
    id: Comparer
    path: ../src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
    startLine: 48
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nThe comparison method used.\n"
  example: []
  syntax:
    content: public StringComparison Comparer { get; set; }
    parameters: []
    return:
      type: System.StringComparison
    content.vb: Public Property Comparer As StringComparison
  overload: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  commentId: P:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  id: IgnoreCase
  parent: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  langs:
  - csharp
  - vb
  name: IgnoreCase
  nameWithType: AllowedValuesAttribute.IgnoreCase
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  type: Property
  source:
    remote:
      path: src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
      branch: b4ae98e77f9f5a5fd2e7994180c7e722b82fe717
      repo: https://github.com/natemcmaster/CommandLineUtils.git
    id: IgnoreCase
    path: ../src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
    startLine: 53
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  summary: "\nComparison between values and allowed values should ignore case.\n"
  example: []
  syntax:
    content: public bool IgnoreCase { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreCase As Boolean
  overload: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  id: IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  langs:
  - csharp
  - vb
  name: IsValid(Object, ValidationContext)
  nameWithType: AllowedValuesAttribute.IsValid(Object, ValidationContext)
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote:
      path: src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
      branch: b4ae98e77f9f5a5fd2e7994180c7e722b82fe717
      repo: https://github.com/natemcmaster/CommandLineUtils.git
    id: IsValid
    path: ../src/CommandLineUtils/Attributes/AllowedValuesAttribute.cs
    startLine: 75
  assemblies:
  - McMaster.Extensions.CommandLineUtils
  namespace: McMaster.Extensions.CommandLineUtils
  example: []
  syntax:
    content: protected override ValidationResult IsValid(object value, ValidationContext validationContext)
    parameters:
    - id: value
      type: System.Object
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
    return:
      type: System.ComponentModel.DataAnnotations.ValidationResult
    content.vb: Protected Overrides Function IsValid(value As Object, validationContext As ValidationContext) As ValidationResult
  overridden: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  overload: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  commentId: P:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  isExternal: true
- uid: McMaster.Extensions.CommandLineUtils
  commentId: N:McMaster.Extensions.CommandLineUtils
  name: McMaster.Extensions.CommandLineUtils
  nameWithType: McMaster.Extensions.CommandLineUtils
  fullName: McMaster.Extensions.CommandLineUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  commentId: T:System.ComponentModel.DataAnnotations.ValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: true
  name: ValidationAttribute
  nameWithType: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.DataAnnotations
  commentId: N:System.ComponentModel.DataAnnotations
  isExternal: true
  name: System.ComponentModel.DataAnnotations
  nameWithType: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  commentId: T:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
  name: AllowedValuesAttribute
  nameWithType: AllowedValuesAttribute
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.#ctor
  name: AllowedValuesAttribute
  nameWithType: AllowedValuesAttribute.AllowedValuesAttribute
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.AllowedValuesAttribute
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer
  name: Comparer
  nameWithType: AllowedValuesAttribute.Comparer
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.Comparer
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
  name: IgnoreCase
  nameWithType: AllowedValuesAttribute.IgnoreCase
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IgnoreCase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: true
  name: IsValid(Object, ValidationContext)
  nameWithType: ValidationAttribute.IsValid(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    nameWithType: ValidationAttribute.IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
    name: IsValid
    nameWithType: ValidationAttribute.IsValid
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid*
  commentId: Overload:McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid
  name: IsValid
  nameWithType: AllowedValuesAttribute.IsValid
  fullName: McMaster.Extensions.CommandLineUtils.AllowedValuesAttribute.IsValid
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  commentId: T:System.ComponentModel.DataAnnotations.ValidationContext
  parent: System.ComponentModel.DataAnnotations
  isExternal: true
  name: ValidationContext
  nameWithType: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
- uid: System.ComponentModel.DataAnnotations.ValidationResult
  commentId: T:System.ComponentModel.DataAnnotations.ValidationResult
  parent: System.ComponentModel.DataAnnotations
  isExternal: true
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationResult
